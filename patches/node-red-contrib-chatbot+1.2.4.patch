diff --git a/node_modules/node-red-contrib-chatbot/lib/platforms/whatsapp/index.js b/node_modules/node-red-contrib-chatbot/lib/platforms/whatsapp/index.js
index 2a36bfe..29bdd38 100644
--- a/node_modules/node-red-contrib-chatbot/lib/platforms/whatsapp/index.js
+++ b/node_modules/node-red-contrib-chatbot/lib/platforms/whatsapp/index.js
@@ -9,13 +9,14 @@ const validators = require('../../helpers/validators');
 const { when, params, getMessageId } = require('../../helpers/utils');
 const fetchers = require('../../helpers/fetchers-obj');
 const { log } = require('../../helpers/lcd');
+const FormData = require("form-data");
 
 const DOCUMENT_EXTENSIONS = ['.txt', '.doc', '.docx','.pdf', '.ppt','.pptx', '.xls', '.xlsx'];
 const PHOTO_EXTENSIONS = ['.jpg', '.jpeg', '.png'];
 const AUDIO_EXTENSIONS = ['.aac', '.mp4', '.mpeg', '.amr', '.ogg', '.opus', '.mp3'];
 const VIDEO_EXTENSIONS = ['.mp4', '.3gp'];
 const MAX_PHOTO_DIMENSIONS = 5 * 1024 * 1024;
-const WHATSAPP_API_URL = 'https://graph.facebook.com/v15.0';
+const WHATSAPP_API_URL = 'https://graph.facebook.com/v17.0';
 
 const stream2buffer = function(stream) {
   return new Promise((resolve, reject) => {
@@ -119,7 +120,7 @@ const Whatsapp = new ChatExpress({
           json.entry.forEach(entry => {
             if (_.isArray(entry.changes)) {
               entry.changes.forEach(change => {
-                if (change?.field === 'messages' && _.isArray(change?.value.statuses)) {
+                /*if (change?.field === 'messages' && _.isArray(change?.value.statuses)) {
                   change?.value.statuses.forEach(status => {
                     // move some fields, those useful to determine chatId, userId, timestamp, messageId
                     // and eventType to first level
@@ -132,13 +133,28 @@ const Whatsapp = new ChatExpress({
                       content: _.omit(status, ['recipient_id', 'id', 'timestamp', 'status'])
                     });
                   });
-                } else if (change?.field === 'messages' && _.isArray(change?.value.messages)) {
+                } else*/
+                if (change?.field === 'messages' && _.isArray(change?.value.messages)) {
                   change?.value.messages.forEach(message => {
                     chatServer.receive({
                       ...message,
                       contacts: change.value.contacts,
                       ...change.value.metadata
                     });
+                    // mark message as read
+                    const {phoneNumberId, token} = this.getOptions()
+                    fetch(`${WHATSAPP_API_URL}/${phoneNumberId}/messages`, {
+                      headers: {
+                        'Authorization': `Bearer ${token}`,
+                        'Content-Type': 'application/json'
+                      },
+                      method: 'POST',
+                      body: JSON.stringify({
+                        "messaging_product": "whatsapp",
+                        "status": "read",
+                        "message_id": message.id
+                      })
+                    })
                   });
                 }
               });
@@ -278,19 +294,16 @@ Whatsapp.mixin({
     }, params);
 
     const formData = new FormData();
-    formData.append(
-      'file',
-      params.buffer,
-      {
-        filename: params.filename,
-        contentType: params.mimeType,
-      }
-    );
     formData.append('messaging_product', 'whatsapp');
+    formData.append('file', params.buffer, {
+      filename: params.filename,
+      contentType: params.mimeType,
+    });
     
     const response = await fetch(`${WHATSAPP_API_URL}/${options.phoneNumberId}/media`, {
       headers: {
-        'Authorization': `Bearer ${options.token}`
+        'Authorization': `Bearer ${options.token}`,
+        ...formData.getHeaders()
       },
       method: 'POST',
       body: formData
